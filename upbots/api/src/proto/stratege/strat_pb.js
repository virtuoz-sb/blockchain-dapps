// source: strat.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.strategie.AccountInfo', null, global);
goog.exportSymbol('proto.strategie.CreateStratRequest', null, global);
goog.exportSymbol('proto.strategie.CreateStratResponse', null, global);
goog.exportSymbol('proto.strategie.Entry', null, global);
goog.exportSymbol('proto.strategie.GetStratRequest', null, global);
goog.exportSymbol('proto.strategie.GetStratResponse', null, global);
goog.exportSymbol('proto.strategie.GetUserStrategiesRequest', null, global);
goog.exportSymbol('proto.strategie.GetUserStrategiesResponse', null, global);
goog.exportSymbol('proto.strategie.HealthCheckResponse', null, global);
goog.exportSymbol('proto.strategie.Market', null, global);
goog.exportSymbol('proto.strategie.Phase', null, global);
goog.exportSymbol('proto.strategie.SideType', null, global);
goog.exportSymbol('proto.strategie.Strategy', null, global);
goog.exportSymbol('proto.strategie.TakeProfit', null, global);
goog.exportSymbol('proto.strategie.TargetType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.Market = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.Market, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.Market.displayName = 'proto.strategie.Market';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.TakeProfit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.TakeProfit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.TakeProfit.displayName = 'proto.strategie.TakeProfit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.AccountInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.AccountInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.AccountInfo.displayName = 'proto.strategie.AccountInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.Entry.displayName = 'proto.strategie.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.Strategy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.strategie.Strategy.repeatedFields_, null);
};
goog.inherits(proto.strategie.Strategy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.Strategy.displayName = 'proto.strategie.Strategy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.GetStratRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.GetStratRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.GetStratRequest.displayName = 'proto.strategie.GetStratRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.GetStratResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.GetStratResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.GetStratResponse.displayName = 'proto.strategie.GetStratResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.GetUserStrategiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.GetUserStrategiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.GetUserStrategiesRequest.displayName = 'proto.strategie.GetUserStrategiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.GetUserStrategiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.strategie.GetUserStrategiesResponse.repeatedFields_, null);
};
goog.inherits(proto.strategie.GetUserStrategiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.GetUserStrategiesResponse.displayName = 'proto.strategie.GetUserStrategiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.CreateStratRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.strategie.CreateStratRequest.repeatedFields_, null);
};
goog.inherits(proto.strategie.CreateStratRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.CreateStratRequest.displayName = 'proto.strategie.CreateStratRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.CreateStratResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.CreateStratResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.CreateStratResponse.displayName = 'proto.strategie.CreateStratResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.strategie.HealthCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.strategie.HealthCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.strategie.HealthCheckResponse.displayName = 'proto.strategie.HealthCheckResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.Market.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.Market.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.Market} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.Market.toObject = function(includeInstance, msg) {
  var f, obj = {
    exchange: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.Market}
 */
proto.strategie.Market.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.Market;
  return proto.strategie.Market.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.Market} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.Market}
 */
proto.strategie.Market.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.Market.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.Market.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.Market} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.Market.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string exchange = 1;
 * @return {string}
 */
proto.strategie.Market.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.strategie.Market} returns this
 */
proto.strategie.Market.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.strategie.Market.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.strategie.Market} returns this
 */
proto.strategie.Market.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.TakeProfit.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.TakeProfit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.TakeProfit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.TakeProfit.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    trigger: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    quantity: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.TakeProfit}
 */
proto.strategie.TakeProfit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.TakeProfit;
  return proto.strategie.TakeProfit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.TakeProfit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.TakeProfit}
 */
proto.strategie.TakeProfit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.strategie.TargetType} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTrigger(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.TakeProfit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.TakeProfit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.TakeProfit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.TakeProfit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTrigger();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional TargetType status = 1;
 * @return {!proto.strategie.TargetType}
 */
proto.strategie.TakeProfit.prototype.getStatus = function() {
  return /** @type {!proto.strategie.TargetType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.strategie.TargetType} value
 * @return {!proto.strategie.TakeProfit} returns this
 */
proto.strategie.TakeProfit.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double trigger = 2;
 * @return {number}
 */
proto.strategie.TakeProfit.prototype.getTrigger = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.TakeProfit} returns this
 */
proto.strategie.TakeProfit.prototype.setTrigger = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double quantity = 3;
 * @return {number}
 */
proto.strategie.TakeProfit.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.TakeProfit} returns this
 */
proto.strategie.TakeProfit.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.AccountInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.AccountInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.AccountInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.AccountInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apikeyid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.AccountInfo}
 */
proto.strategie.AccountInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.AccountInfo;
  return proto.strategie.AccountInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.AccountInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.AccountInfo}
 */
proto.strategie.AccountInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApikeyid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.AccountInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.AccountInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.AccountInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.AccountInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApikeyid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string userID = 1;
 * @return {string}
 */
proto.strategie.AccountInfo.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.strategie.AccountInfo} returns this
 */
proto.strategie.AccountInfo.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string apiKeyID = 2;
 * @return {string}
 */
proto.strategie.AccountInfo.prototype.getApikeyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.strategie.AccountInfo} returns this
 */
proto.strategie.AccountInfo.prototype.setApikeyid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketentry: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    limitentry: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    triggerprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    limitprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    quantity: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.Entry}
 */
proto.strategie.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.Entry;
  return proto.strategie.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.Entry}
 */
proto.strategie.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMarketentry(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLimitentry(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTriggerprice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLimitprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketentry();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getLimitentry();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTriggerprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLimitprice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional bool marketEntry = 1;
 * @return {boolean}
 */
proto.strategie.Entry.prototype.getMarketentry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.strategie.Entry} returns this
 */
proto.strategie.Entry.prototype.setMarketentry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool limitEntry = 2;
 * @return {boolean}
 */
proto.strategie.Entry.prototype.getLimitentry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.strategie.Entry} returns this
 */
proto.strategie.Entry.prototype.setLimitentry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional double triggerPrice = 3;
 * @return {number}
 */
proto.strategie.Entry.prototype.getTriggerprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.Entry} returns this
 */
proto.strategie.Entry.prototype.setTriggerprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double limitPrice = 4;
 * @return {number}
 */
proto.strategie.Entry.prototype.getLimitprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.Entry} returns this
 */
proto.strategie.Entry.prototype.setLimitprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double quantity = 5;
 * @return {number}
 */
proto.strategie.Entry.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.Entry} returns this
 */
proto.strategie.Entry.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.strategie.Strategy.repeatedFields_ = [7,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.Strategy.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.Strategy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.Strategy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.Strategy.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryrangefrom: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    entryrangeto: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    stoploss: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    side: jspb.Message.getFieldWithDefault(msg, 4, 0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    market: (f = msg.getMarket()) && proto.strategie.Market.toObject(includeInstance, f),
    takeprofitsList: jspb.Message.toObjectList(msg.getTakeprofitsList(),
    proto.strategie.TakeProfit.toObject, includeInstance),
    guid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    account: (f = msg.getAccount()) && proto.strategie.AccountInfo.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    phase: jspb.Message.getFieldWithDefault(msg, 12, 0),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.strategie.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.Strategy}
 */
proto.strategie.Strategy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.Strategy;
  return proto.strategie.Strategy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.Strategy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.Strategy}
 */
proto.strategie.Strategy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEntryrangefrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEntryrangeto(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoploss(value);
      break;
    case 4:
      var value = /** @type {!proto.strategie.SideType} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    case 6:
      var value = new proto.strategie.Market;
      reader.readMessage(value,proto.strategie.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    case 7:
      var value = new proto.strategie.TakeProfit;
      reader.readMessage(value,proto.strategie.TakeProfit.deserializeBinaryFromReader);
      msg.addTakeprofits(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuid(value);
      break;
    case 9:
      var value = new proto.strategie.AccountInfo;
      reader.readMessage(value,proto.strategie.AccountInfo.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 12:
      var value = /** @type {!proto.strategie.Phase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 13:
      var value = new proto.strategie.Entry;
      reader.readMessage(value,proto.strategie.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.Strategy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.Strategy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.Strategy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.Strategy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryrangefrom();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getEntryrangeto();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getStoploss();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.strategie.Market.serializeBinaryToWriter
    );
  }
  f = message.getTakeprofitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.strategie.TakeProfit.serializeBinaryToWriter
    );
  }
  f = message.getGuid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.strategie.AccountInfo.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.strategie.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional double entryRangeFrom = 1;
 * @return {number}
 */
proto.strategie.Strategy.prototype.getEntryrangefrom = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.setEntryrangefrom = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double entryRangeTo = 2;
 * @return {number}
 */
proto.strategie.Strategy.prototype.getEntryrangeto = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.setEntryrangeto = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double stopLoss = 3;
 * @return {number}
 */
proto.strategie.Strategy.prototype.getStoploss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.setStoploss = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional SideType side = 4;
 * @return {!proto.strategie.SideType}
 */
proto.strategie.Strategy.prototype.getSide = function() {
  return /** @type {!proto.strategie.SideType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.strategie.SideType} value
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional double volume = 5;
 * @return {number}
 */
proto.strategie.Strategy.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional Market market = 6;
 * @return {?proto.strategie.Market}
 */
proto.strategie.Strategy.prototype.getMarket = function() {
  return /** @type{?proto.strategie.Market} */ (
    jspb.Message.getWrapperField(this, proto.strategie.Market, 6));
};


/**
 * @param {?proto.strategie.Market|undefined} value
 * @return {!proto.strategie.Strategy} returns this
*/
proto.strategie.Strategy.prototype.setMarket = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.clearMarket = function() {
  return this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.Strategy.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated TakeProfit takeProfits = 7;
 * @return {!Array<!proto.strategie.TakeProfit>}
 */
proto.strategie.Strategy.prototype.getTakeprofitsList = function() {
  return /** @type{!Array<!proto.strategie.TakeProfit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.strategie.TakeProfit, 7));
};


/**
 * @param {!Array<!proto.strategie.TakeProfit>} value
 * @return {!proto.strategie.Strategy} returns this
*/
proto.strategie.Strategy.prototype.setTakeprofitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.strategie.TakeProfit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.strategie.TakeProfit}
 */
proto.strategie.Strategy.prototype.addTakeprofits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.strategie.TakeProfit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.clearTakeprofitsList = function() {
  return this.setTakeprofitsList([]);
};


/**
 * optional string GUID = 8;
 * @return {string}
 */
proto.strategie.Strategy.prototype.getGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.setGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional AccountInfo account = 9;
 * @return {?proto.strategie.AccountInfo}
 */
proto.strategie.Strategy.prototype.getAccount = function() {
  return /** @type{?proto.strategie.AccountInfo} */ (
    jspb.Message.getWrapperField(this, proto.strategie.AccountInfo, 9));
};


/**
 * @param {?proto.strategie.AccountInfo|undefined} value
 * @return {!proto.strategie.Strategy} returns this
*/
proto.strategie.Strategy.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.Strategy.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.strategie.Strategy.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.strategie.Strategy} returns this
*/
proto.strategie.Strategy.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.Strategy.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.strategie.Strategy.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.strategie.Strategy} returns this
*/
proto.strategie.Strategy.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.Strategy.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Phase phase = 12;
 * @return {!proto.strategie.Phase}
 */
proto.strategie.Strategy.prototype.getPhase = function() {
  return /** @type {!proto.strategie.Phase} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.strategie.Phase} value
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * repeated Entry entries = 13;
 * @return {!Array<!proto.strategie.Entry>}
 */
proto.strategie.Strategy.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.strategie.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.strategie.Entry, 13));
};


/**
 * @param {!Array<!proto.strategie.Entry>} value
 * @return {!proto.strategie.Strategy} returns this
*/
proto.strategie.Strategy.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.strategie.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.strategie.Entry}
 */
proto.strategie.Strategy.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.strategie.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.strategie.Strategy} returns this
 */
proto.strategie.Strategy.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.GetStratRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.GetStratRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.GetStratRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetStratRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    guid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.GetStratRequest}
 */
proto.strategie.GetStratRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.GetStratRequest;
  return proto.strategie.GetStratRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.GetStratRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.GetStratRequest}
 */
proto.strategie.GetStratRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.GetStratRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.GetStratRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.GetStratRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetStratRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string GUID = 1;
 * @return {string}
 */
proto.strategie.GetStratRequest.prototype.getGuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.strategie.GetStratRequest} returns this
 */
proto.strategie.GetStratRequest.prototype.setGuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.GetStratResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.GetStratResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.GetStratResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetStratResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    strat: (f = msg.getStrat()) && proto.strategie.Strategy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.GetStratResponse}
 */
proto.strategie.GetStratResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.GetStratResponse;
  return proto.strategie.GetStratResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.GetStratResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.GetStratResponse}
 */
proto.strategie.GetStratResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.strategie.Strategy;
      reader.readMessage(value,proto.strategie.Strategy.deserializeBinaryFromReader);
      msg.setStrat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.GetStratResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.GetStratResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.GetStratResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetStratResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStrat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.strategie.Strategy.serializeBinaryToWriter
    );
  }
};


/**
 * optional Strategy strat = 1;
 * @return {?proto.strategie.Strategy}
 */
proto.strategie.GetStratResponse.prototype.getStrat = function() {
  return /** @type{?proto.strategie.Strategy} */ (
    jspb.Message.getWrapperField(this, proto.strategie.Strategy, 1));
};


/**
 * @param {?proto.strategie.Strategy|undefined} value
 * @return {!proto.strategie.GetStratResponse} returns this
*/
proto.strategie.GetStratResponse.prototype.setStrat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.GetStratResponse} returns this
 */
proto.strategie.GetStratResponse.prototype.clearStrat = function() {
  return this.setStrat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.GetStratResponse.prototype.hasStrat = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.GetUserStrategiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.GetUserStrategiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.GetUserStrategiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetUserStrategiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.GetUserStrategiesRequest}
 */
proto.strategie.GetUserStrategiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.GetUserStrategiesRequest;
  return proto.strategie.GetUserStrategiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.GetUserStrategiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.GetUserStrategiesRequest}
 */
proto.strategie.GetUserStrategiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.GetUserStrategiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.GetUserStrategiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.GetUserStrategiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetUserStrategiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string userID = 1;
 * @return {string}
 */
proto.strategie.GetUserStrategiesRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.strategie.GetUserStrategiesRequest} returns this
 */
proto.strategie.GetUserStrategiesRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.strategie.GetUserStrategiesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.GetUserStrategiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.GetUserStrategiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.GetUserStrategiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetUserStrategiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stratsList: jspb.Message.toObjectList(msg.getStratsList(),
    proto.strategie.Strategy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.GetUserStrategiesResponse}
 */
proto.strategie.GetUserStrategiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.GetUserStrategiesResponse;
  return proto.strategie.GetUserStrategiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.GetUserStrategiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.GetUserStrategiesResponse}
 */
proto.strategie.GetUserStrategiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.strategie.Strategy;
      reader.readMessage(value,proto.strategie.Strategy.deserializeBinaryFromReader);
      msg.addStrats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.GetUserStrategiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.GetUserStrategiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.GetUserStrategiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.GetUserStrategiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStratsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.strategie.Strategy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Strategy strats = 1;
 * @return {!Array<!proto.strategie.Strategy>}
 */
proto.strategie.GetUserStrategiesResponse.prototype.getStratsList = function() {
  return /** @type{!Array<!proto.strategie.Strategy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.strategie.Strategy, 1));
};


/**
 * @param {!Array<!proto.strategie.Strategy>} value
 * @return {!proto.strategie.GetUserStrategiesResponse} returns this
*/
proto.strategie.GetUserStrategiesResponse.prototype.setStratsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.strategie.Strategy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.strategie.Strategy}
 */
proto.strategie.GetUserStrategiesResponse.prototype.addStrats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.strategie.Strategy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.strategie.GetUserStrategiesResponse} returns this
 */
proto.strategie.GetUserStrategiesResponse.prototype.clearStratsList = function() {
  return this.setStratsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.strategie.CreateStratRequest.repeatedFields_ = [1,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.CreateStratRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.CreateStratRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.CreateStratRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.CreateStratRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.strategie.Entry.toObject, includeInstance),
    entryrangefrom: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    entryrangeto: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    takeprofitsList: jspb.Message.toObjectList(msg.getTakeprofitsList(),
    proto.strategie.TakeProfit.toObject, includeInstance),
    stoploss: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    side: jspb.Message.getFieldWithDefault(msg, 6, 0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    market: (f = msg.getMarket()) && proto.strategie.Market.toObject(includeInstance, f),
    account: (f = msg.getAccount()) && proto.strategie.AccountInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.CreateStratRequest}
 */
proto.strategie.CreateStratRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.CreateStratRequest;
  return proto.strategie.CreateStratRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.CreateStratRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.CreateStratRequest}
 */
proto.strategie.CreateStratRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.strategie.Entry;
      reader.readMessage(value,proto.strategie.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEntryrangefrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEntryrangeto(value);
      break;
    case 4:
      var value = new proto.strategie.TakeProfit;
      reader.readMessage(value,proto.strategie.TakeProfit.deserializeBinaryFromReader);
      msg.addTakeprofits(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoploss(value);
      break;
    case 6:
      var value = /** @type {!proto.strategie.SideType} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    case 8:
      var value = new proto.strategie.Market;
      reader.readMessage(value,proto.strategie.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    case 9:
      var value = new proto.strategie.AccountInfo;
      reader.readMessage(value,proto.strategie.AccountInfo.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.CreateStratRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.CreateStratRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.CreateStratRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.CreateStratRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.strategie.Entry.serializeBinaryToWriter
    );
  }
  f = message.getEntryrangefrom();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getEntryrangeto();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTakeprofitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.strategie.TakeProfit.serializeBinaryToWriter
    );
  }
  f = message.getStoploss();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.strategie.Market.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.strategie.AccountInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Entry entries = 1;
 * @return {!Array<!proto.strategie.Entry>}
 */
proto.strategie.CreateStratRequest.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.strategie.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.strategie.Entry, 1));
};


/**
 * @param {!Array<!proto.strategie.Entry>} value
 * @return {!proto.strategie.CreateStratRequest} returns this
*/
proto.strategie.CreateStratRequest.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.strategie.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.strategie.Entry}
 */
proto.strategie.CreateStratRequest.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.strategie.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};


/**
 * optional double entryRangeFrom = 2;
 * @return {number}
 */
proto.strategie.CreateStratRequest.prototype.getEntryrangefrom = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.setEntryrangefrom = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double entryRangeTo = 3;
 * @return {number}
 */
proto.strategie.CreateStratRequest.prototype.getEntryrangeto = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.setEntryrangeto = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * repeated TakeProfit takeProfits = 4;
 * @return {!Array<!proto.strategie.TakeProfit>}
 */
proto.strategie.CreateStratRequest.prototype.getTakeprofitsList = function() {
  return /** @type{!Array<!proto.strategie.TakeProfit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.strategie.TakeProfit, 4));
};


/**
 * @param {!Array<!proto.strategie.TakeProfit>} value
 * @return {!proto.strategie.CreateStratRequest} returns this
*/
proto.strategie.CreateStratRequest.prototype.setTakeprofitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.strategie.TakeProfit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.strategie.TakeProfit}
 */
proto.strategie.CreateStratRequest.prototype.addTakeprofits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.strategie.TakeProfit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.clearTakeprofitsList = function() {
  return this.setTakeprofitsList([]);
};


/**
 * optional double stopLoss = 5;
 * @return {number}
 */
proto.strategie.CreateStratRequest.prototype.getStoploss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.setStoploss = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional SideType side = 6;
 * @return {!proto.strategie.SideType}
 */
proto.strategie.CreateStratRequest.prototype.getSide = function() {
  return /** @type {!proto.strategie.SideType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.strategie.SideType} value
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional double volume = 7;
 * @return {number}
 */
proto.strategie.CreateStratRequest.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional Market market = 8;
 * @return {?proto.strategie.Market}
 */
proto.strategie.CreateStratRequest.prototype.getMarket = function() {
  return /** @type{?proto.strategie.Market} */ (
    jspb.Message.getWrapperField(this, proto.strategie.Market, 8));
};


/**
 * @param {?proto.strategie.Market|undefined} value
 * @return {!proto.strategie.CreateStratRequest} returns this
*/
proto.strategie.CreateStratRequest.prototype.setMarket = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.clearMarket = function() {
  return this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.CreateStratRequest.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional AccountInfo account = 9;
 * @return {?proto.strategie.AccountInfo}
 */
proto.strategie.CreateStratRequest.prototype.getAccount = function() {
  return /** @type{?proto.strategie.AccountInfo} */ (
    jspb.Message.getWrapperField(this, proto.strategie.AccountInfo, 9));
};


/**
 * @param {?proto.strategie.AccountInfo|undefined} value
 * @return {!proto.strategie.CreateStratRequest} returns this
*/
proto.strategie.CreateStratRequest.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.CreateStratRequest} returns this
 */
proto.strategie.CreateStratRequest.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.CreateStratRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.CreateStratResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.CreateStratResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.CreateStratResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.CreateStratResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    strat: (f = msg.getStrat()) && proto.strategie.Strategy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.CreateStratResponse}
 */
proto.strategie.CreateStratResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.CreateStratResponse;
  return proto.strategie.CreateStratResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.CreateStratResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.CreateStratResponse}
 */
proto.strategie.CreateStratResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.strategie.Strategy;
      reader.readMessage(value,proto.strategie.Strategy.deserializeBinaryFromReader);
      msg.setStrat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.CreateStratResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.CreateStratResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.CreateStratResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.CreateStratResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStrat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.strategie.Strategy.serializeBinaryToWriter
    );
  }
};


/**
 * optional Strategy strat = 1;
 * @return {?proto.strategie.Strategy}
 */
proto.strategie.CreateStratResponse.prototype.getStrat = function() {
  return /** @type{?proto.strategie.Strategy} */ (
    jspb.Message.getWrapperField(this, proto.strategie.Strategy, 1));
};


/**
 * @param {?proto.strategie.Strategy|undefined} value
 * @return {!proto.strategie.CreateStratResponse} returns this
*/
proto.strategie.CreateStratResponse.prototype.setStrat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.strategie.CreateStratResponse} returns this
 */
proto.strategie.CreateStratResponse.prototype.clearStrat = function() {
  return this.setStrat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.strategie.CreateStratResponse.prototype.hasStrat = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.strategie.HealthCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.strategie.HealthCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.strategie.HealthCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.HealthCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    okstatus: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.strategie.HealthCheckResponse}
 */
proto.strategie.HealthCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.strategie.HealthCheckResponse;
  return proto.strategie.HealthCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.strategie.HealthCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.strategie.HealthCheckResponse}
 */
proto.strategie.HealthCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOkstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.strategie.HealthCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.strategie.HealthCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.strategie.HealthCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.strategie.HealthCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOkstatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool okStatus = 1;
 * @return {boolean}
 */
proto.strategie.HealthCheckResponse.prototype.getOkstatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.strategie.HealthCheckResponse} returns this
 */
proto.strategie.HealthCheckResponse.prototype.setOkstatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.strategie.Phase = {
  NOPHASESET: 0,
  WAITINGFORENTRY: 1,
  ENTRYREQUESTED: 2,
  ENTEREDPARTIAL: 3,
  ENTERED: 4,
  TAKEPROFITREQUESTED: 5,
  TAKEPROFITREACHED: 6,
  STRATLOCKEDSTATE: 7,
  CLOSEDBYENTRYMISSED: 8,
  CLOSINGBYSTOPLOSS: 9,
  CLOSINGBYTAKEPROFIT: 10,
  CLOSEDBYSTOPLOSS: 11,
  CLOSEDBYTAKEPROFIT: 12,
  ORDERCANCELLEDBYUSER: 13,
  STATUSERROR: 14
};

/**
 * @enum {number}
 */
proto.strategie.SideType = {
  UNKNOWN_SIDE_TYPE: 0,
  BUY: 1,
  SELL: 2
};

/**
 * @enum {number}
 */
proto.strategie.TargetType = {
  NOT_SET: 0,
  REQUESTED: 1,
  REACHED: 2
};

goog.object.extend(exports, proto.strategie);
